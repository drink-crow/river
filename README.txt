river 是一个使用C++编写的，可以处理曲线的多边形裁剪库。多边形裁剪是各种工业、设计软件常见功能，但是常见的多边形裁剪算法基本是建立在纯线段的基础上。在实际应用中，常需要对包含曲线内容的多边形进行计算。在作者的实际工作经验和见闻中，许多公司（包括一些大公司），都十分需要这方面的内容。常见的各种多边形裁剪库，诸如clipper，尽管其本身十分优秀，缺不支持对曲线的运算。支持曲线运算的，如 CGAL 中的功能库，其算法库体积庞大且代码复杂，使用上也有诸多限制。
对多边形进行裁剪并不是一件特别简单的事情，而且根据实际经验表明，这项操作对运算的速度有特别高的要求。例如对文字进行轮廓生成，其中重要的一步就是对生成多边形进行，在该操作中，往往需要计算海量的数据。只要稍微提高一下细分程度，每个字符的多边形轮廓就可以有上千个节点，一段文字的所有节点接起来可以轻松到达数十万。


多边形（含曲线内容，下文提到的多边形均默认为包含曲线内容）的布尔操作基本是以视为找出多边形将空间划分后的各个最小碎片，然后根据具体的运算（与、或，异或等）拼接成需要的结果。decl(Doubly Connect Edge List) 是常见的用来描述平面划分的结构，常见的使用案例有维诺图等。生成 decl 的算法就很适合完成这项任务。常见的 decl 是针对与线段的，对于曲线内容，需要对算法进行一些特殊的改造，以满足 decl 的生成过程。

一般的 decl 中，两个点之间只有一对半边，如果要兼容曲线的话

每加一个线段，运算完所有的交点，且打断相交的对象，points 和 edges 始终是运算完全的
可以计算完后再计算


添加完所有的对象，再计算所有的交点，再打断 edges。一次生成最终数据
计算交点的工作量会更少（可以使用扫描线算法来计算交点，速度会更快）


扫描线求交点后打断，知道所有的线段多有的断点，逐一打断替换
